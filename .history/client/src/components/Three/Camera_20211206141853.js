/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Bruce (https://sketchfab.com/brucemevans)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/2edd95718d694d1493c2538bc9de3b03
title: Low Poly Polaroid
*/

import React, { useRef, useLayoutEffect, useEffect, useState} from 'react';
import { useGLTF, meshBounds } from '@react-three/drei';
import Modal from '../Modal';
import { motion } from 'framer-motion';
import { Html } from '@react-three/drei';
export default function Camera({ ...props }) {

  // const [modalOpen, setModalOpen] = useState(false);
  // const close = () => setModalOpen(false);
  // const open = () => setModalOpen(true);
  const [open, setOpen] = useState(false);

  const group = useRef()
  const { nodes, materials } = useGLTF('../../../models/camera/scene.gltf')
  const [hovered, setHover] = useState(false);

  useEffect(() => {
    if(hovered){
        alert('camer');
    }else{
    }
    // document.body.style.cursor = hovered ? "grab" : "auto";
  }, [hovered]);
  useLayoutEffect(
    () =>{
      for(let i = 0; i < nodes.length; i++){
        if(nodes[i].isMesh){
          nodes[i].raycast = meshBounds;
        }
      }
    },
    []
  );
  return (
    <>
    <group raycast={meshBounds} onPointerDown={(event) => setHover(true)} onPointerOut={(event) => setHover(false)} ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, -0.04, 0.04]}>
            <mesh geometry={nodes.WhitePlastic_WhitePlastic_0.geometry} material={materials.WhitePlastic} />
          </group>
          <group position={[0, -0.04, 0.04]}>
            <mesh geometry={nodes['Front_Viewfinder_Glass_Glass_(1)_0'].geometry} material={materials.Glass_1} />
          </group>
          <group position={[0, -0.04, 0.05]}>
            <mesh geometry={nodes.Middle_Glossy_Plastic_GlossyBlack_0.geometry} material={materials.GlossyBlack} />
          </group>
          <group position={[0, -0.04, 0.04]}>
            <mesh geometry={nodes.Film_Hole_GlossyBlack_0.geometry} material={materials.GlossyBlack_0} />
          </group>
          <mesh geometry={nodes.Back_Rough_RoughBlack_0.geometry} material={materials.RoughBlack} />
          <mesh geometry={nodes.EyeGlass_Glass_0.geometry} material={materials.Glass} />
          <group position={[0, 0.11, 0.14]} rotation={[Math.PI / 2, 0, 0]} scale={0.09}>
            <mesh geometry={nodes.Plastic_Around_the_Lens_GlossyBlack_0.geometry} material={materials.GlossyBlack_1} />
          </group>
          <group position={[0, 0.11, 0.07]} rotation={[Math.PI / 2, 0, 0]} scale={0.07}>
            <mesh geometry={nodes.Lens_Glass_0.geometry} material={materials.Glass_0} />
          </group>
          <group position={[-0.16, 0.06, 0.08]} rotation={[Math.PI / 2, 0, 0]} scale={0.03}>
            <mesh geometry={nodes['Shutter_Button_RoughBlack_(1)_0'].geometry} material={materials.RoughBlack_1} />
          </group>
          <group position={[0.14, 0.06, 0.13]} rotation={[Math.PI / 2, 0, 0]} scale={0.03}>
            <mesh geometry={nodes.Exposure_GlossyBlack_0.geometry} material={materials.GlossyBlack_2} />
          </group>
        </group>
      </group>
    </group>
    {/* <Modal open={open} setOpen={setOpen} /> */}

    </>
  )
}

useGLTF.preload('../../../models/camera/scene.gltf')
