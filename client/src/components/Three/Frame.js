/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Valo Niskanen (https://sketchfab.com/Valo.Niskanen)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/picture-frame-cat-e8cb524744e241819dad80c3d459c676
title: Picture Frame - Cat
*/

import React, { useRef, useLayoutEffect, useEffect, useState} from 'react'
import { useGLTF, meshBounds } from '@react-three/drei'

export default function Frame({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('../../../models/frame/scene.gltf')
  const [hovered, setHover] = useState(false);

  useEffect(() => {
    if(hovered){
      alert('Frame');
    }else{
      console.log('as');
    }
    // document.body.style.cursor = hovered ? "grab" : "auto";
  }, [hovered]);
  useLayoutEffect(
    () =>{
      for(let i = 0; i < nodes.length; i++){
        if(nodes[i].isMesh){
          nodes[i].raycast = meshBounds;
        }
      }
    },
    []
  );
  return (
    <group raycast={meshBounds} onPointerDown={(event) => setHover(true)} onPointerOut={(event) => setHover(false)} ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[1.46, 0, 0]}>
            <mesh geometry={nodes.mesh_0.geometry} material={materials['Material.001']} />
            <mesh geometry={nodes.mesh_1.geometry} material={materials['Material.002']} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('../../../models/frame/scene.gltf')
