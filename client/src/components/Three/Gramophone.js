/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Aleksey Kozhemyakin (https://sketchfab.com/aleksey-k)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/gramophone-disk-9611c845afef4c048bfc0f93d1eed67e
title: Gramophone disk
*/

import React, { useRef, useLayoutEffect, useEffect, useState } from 'react'
import { useGLTF, meshBounds } from '@react-three/drei'

export default function Gramophone({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('../../../models/gramophone/scene.gltf')
  const [hovered, setHover] = useState(false);

  useEffect(() => {
    if(hovered){
      alert('Gramophone');
    }else{
      console.log('as');
    }
    // document.body.style.cursor = hovered ? "grab" : "auto";
  }, [hovered]);
  useLayoutEffect(
    () =>{
      for(let i = 0; i < nodes.length; i++){
        if(nodes[i].isMesh){
          nodes[i].raycast = meshBounds;
        }
      }
    },
    []
  );
  return (
    <group raycast={meshBounds} onPointerDown={(event) => setHover(true)} onPointerOut={(event) => setHover(false)} ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[-27.54, 0, 0]} rotation={[-Math.PI / 2, 0, -0.73]}>
            <mesh geometry={nodes.disk_uk_M_disk_uk_0.geometry} material={materials.M_disk_uk} />
          </group>
          <group position={[0.37, 0, 6.57]} rotation={[-Math.PI / 2, 0, 0.38]}>
            <mesh geometry={nodes.disk_uk001_M_disk_old_0.geometry} material={materials.M_disk_old} />
          </group>
          <group position={[29.12, 0, 0]} rotation={[-Math.PI / 2, 0, -1.39]}>
            <mesh geometry={nodes.disk_uk002_M_disk_ussr_0.geometry} material={materials.M_disk_ussr} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('../../../models/gramophone/scene.gltf')
