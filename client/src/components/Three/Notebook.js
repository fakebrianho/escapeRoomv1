/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Skreater (https://sketchfab.com/Skreater)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/note-book-83c74e7caab14bd696320f87b8507fd1
title: Note book
*/

import React, { useRef, useLayoutEffect, useEffect, useState } from 'react'
import { useGLTF, useAnimations, meshBounds } from '@react-three/drei'

export default function Notebook({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('../../../models/notebook/scene.gltf')
  const [hovered, setHover] = useState(false);

  useEffect(() => {
    if(hovered){
      alert('Notebook');
    }else{
      console.log('as');
    }
    // document.body.style.cursor = hovered ? "grab" : "auto";
  }, [hovered]);
  useLayoutEffect(
    () =>{
      for(let i = 0; i < nodes.length; i++){
        if(nodes[i].isMesh){
          nodes[i].raycast = meshBounds;
        }
      }
    },
    []
  );
  const { actions } = useAnimations(animations, group)
  return (
    <group raycast={meshBounds} onPointerDown={(event) => setHover(true)} onPointerOut={(event) => setHover(false)} ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            geometry={
              nodes
                .notitie_boekje_0_0_3notitie_boekje_0_0notitie_boekje_0_0bladzijden_notitie_boekje_0_0_3notitie_boekje_0_0lambert4_0
                .geometry
            }
            material={materials.notitie_boekje_0_0_3notitie_boekje_0_0lambert4}
            skeleton={
              nodes
                .notitie_boekje_0_0_3notitie_boekje_0_0notitie_boekje_0_0bladzijden_notitie_boekje_0_0_3notitie_boekje_0_0lambert4_0
                .skeleton
            }
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('../../../models/notebook/scene.gltf')
